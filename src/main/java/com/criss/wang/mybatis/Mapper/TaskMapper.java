package com.criss.wang.mybatis.Mapper;

import com.criss.wang.mybatis.model.Task;
import com.criss.wang.mybatis.model.TaskWithBLOBs;
import java.util.Date;
import org.apache.ibatis.annotations.Arg;
import org.apache.ibatis.annotations.ConstructorArgs;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TaskMapper {
    @Delete({
        "delete from TB_TASK_INFO",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    @Insert({
        "insert into TB_TASK_INFO (tk_id, shepherd_id, ",
        "fence_id, ortho_id, ",
        "uav_id, uav_type, air_line_num, ",
        "finished_count, task_type, ",
        "name, status, predict_time, ",
        "predict_fly_distance, predict_battery_num, ",
        "predict_picture_num, predict_height, ",
        "predict_speed, predict_back_height, ",
        "finish_action, battery, ",
        "picture_num, height, ",
        "speed, away_from_start, ",
        "heading_mode, course_lapover, ",
        "side_lapover, principal_row_angle, ",
        "edge_dis, geodesic_point_str, ",
        "record_time, shoot_photo_type, ",
        "way_points_str, last_waypoint_str, ",
        "last_way_point_index, go_home_way_point_index, ",
        "going_back_point_str, progress, ",
        "parent_id, go_backed, ",
        "has_back, air_adjust_flag, ",
        "buffer_range_str, safe_range_str, ",
        "max_speed, free_speed, ",
        "deleted, starttime, ",
        "endtime, org_id, ",
        "createdate, updatedate, ",
        "home_point_str, history_point_bytes)",
        "values (#{tkId,jdbcType=VARCHAR}, #{shepherdId,jdbcType=VARCHAR}, ",
        "#{fenceId,jdbcType=VARCHAR}, #{orthoId,jdbcType=VARCHAR}, ",
        "#{uavId,jdbcType=VARCHAR}, #{uavType,jdbcType=BIT}, #{airLineNum,jdbcType=INTEGER}, ",
        "#{finishedCount,jdbcType=INTEGER}, #{taskType,jdbcType=BIT}, ",
        "#{name,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{predictTime,jdbcType=INTEGER}, ",
        "#{predictFlyDistance,jdbcType=DOUBLE}, #{predictBatteryNum,jdbcType=INTEGER}, ",
        "#{predictPictureNum,jdbcType=INTEGER}, #{predictHeight,jdbcType=INTEGER}, ",
        "#{predictSpeed,jdbcType=DOUBLE}, #{predictBackHeight,jdbcType=INTEGER}, ",
        "#{finishAction,jdbcType=INTEGER}, #{battery,jdbcType=REAL}, ",
        "#{pictureNum,jdbcType=INTEGER}, #{height,jdbcType=DOUBLE}, ",
        "#{speed,jdbcType=DOUBLE}, #{awayFromStart,jdbcType=DOUBLE}, ",
        "#{headingMode,jdbcType=INTEGER}, #{courseLapover,jdbcType=REAL}, ",
        "#{sideLapover,jdbcType=REAL}, #{principalRowAngle,jdbcType=REAL}, ",
        "#{edgeDis,jdbcType=REAL}, #{geodesicPointStr,jdbcType=VARCHAR}, ",
        "#{recordTime,jdbcType=DOUBLE}, #{shootPhotoType,jdbcType=INTEGER}, ",
        "#{wayPointsStr,jdbcType=VARCHAR}, #{lastWaypointStr,jdbcType=VARCHAR}, ",
        "#{lastWayPointIndex,jdbcType=INTEGER}, #{goHomeWayPointIndex,jdbcType=INTEGER}, ",
        "#{goingBackPointStr,jdbcType=VARCHAR}, #{progress,jdbcType=INTEGER}, ",
        "#{parentId,jdbcType=VARCHAR}, #{goBacked,jdbcType=BIT}, ",
        "#{hasBack,jdbcType=BIT}, #{airAdjustFlag,jdbcType=BIT}, ",
        "#{bufferRangeStr,jdbcType=VARCHAR}, #{safeRangeStr,jdbcType=VARCHAR}, ",
        "#{maxSpeed,jdbcType=INTEGER}, #{freeSpeed,jdbcType=INTEGER}, ",
        "#{deleted,jdbcType=BIT}, #{starttime,jdbcType=TIMESTAMP}, ",
        "#{endtime,jdbcType=TIMESTAMP}, #{orgId,jdbcType=VARCHAR}, ",
        "#{createdate,jdbcType=TIMESTAMP}, #{updatedate,jdbcType=TIMESTAMP}, ",
        "#{homePointStr,jdbcType=LONGVARCHAR}, #{historyPointBytes,jdbcType=LONGVARBINARY})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insert(TaskWithBLOBs record);

    @InsertProvider(type=TaskSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insertSelective(TaskWithBLOBs record);

    @Select({
        "select",
        "id, tk_id, shepherd_id, fence_id, ortho_id, uav_id, uav_type, air_line_num, ",
        "finished_count, task_type, name, status, predict_time, predict_fly_distance, ",
        "predict_battery_num, predict_picture_num, predict_height, predict_speed, predict_back_height, ",
        "finish_action, battery, picture_num, height, speed, away_from_start, heading_mode, ",
        "course_lapover, side_lapover, principal_row_angle, edge_dis, geodesic_point_str, ",
        "record_time, shoot_photo_type, way_points_str, last_waypoint_str, last_way_point_index, ",
        "go_home_way_point_index, going_back_point_str, progress, parent_id, go_backed, ",
        "has_back, air_adjust_flag, buffer_range_str, safe_range_str, max_speed, free_speed, ",
        "deleted, starttime, endtime, org_id, createdate, updatedate, home_point_str, ",
        "history_point_bytes",
        "from TB_TASK_INFO",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @ConstructorArgs({
        @Arg(column="id", javaType=Long.class, jdbcType=JdbcType.BIGINT, id=true),
        @Arg(column="tk_id", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="shepherd_id", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="fence_id", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="ortho_id", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="uav_id", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="uav_type", javaType=Boolean.class, jdbcType=JdbcType.BIT),
        @Arg(column="air_line_num", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="finished_count", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="task_type", javaType=Boolean.class, jdbcType=JdbcType.BIT),
        @Arg(column="name", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="status", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="predict_time", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="predict_fly_distance", javaType=Double.class, jdbcType=JdbcType.DOUBLE),
        @Arg(column="predict_battery_num", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="predict_picture_num", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="predict_height", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="predict_speed", javaType=Double.class, jdbcType=JdbcType.DOUBLE),
        @Arg(column="predict_back_height", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="finish_action", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="battery", javaType=Float.class, jdbcType=JdbcType.REAL),
        @Arg(column="picture_num", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="height", javaType=Double.class, jdbcType=JdbcType.DOUBLE),
        @Arg(column="speed", javaType=Double.class, jdbcType=JdbcType.DOUBLE),
        @Arg(column="away_from_start", javaType=Double.class, jdbcType=JdbcType.DOUBLE),
        @Arg(column="heading_mode", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="course_lapover", javaType=Float.class, jdbcType=JdbcType.REAL),
        @Arg(column="side_lapover", javaType=Float.class, jdbcType=JdbcType.REAL),
        @Arg(column="principal_row_angle", javaType=Float.class, jdbcType=JdbcType.REAL),
        @Arg(column="edge_dis", javaType=Float.class, jdbcType=JdbcType.REAL),
        @Arg(column="geodesic_point_str", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="record_time", javaType=Double.class, jdbcType=JdbcType.DOUBLE),
        @Arg(column="shoot_photo_type", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="way_points_str", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="last_waypoint_str", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="last_way_point_index", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="go_home_way_point_index", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="going_back_point_str", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="progress", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="parent_id", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="go_backed", javaType=Boolean.class, jdbcType=JdbcType.BIT),
        @Arg(column="has_back", javaType=Boolean.class, jdbcType=JdbcType.BIT),
        @Arg(column="air_adjust_flag", javaType=Boolean.class, jdbcType=JdbcType.BIT),
        @Arg(column="buffer_range_str", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="safe_range_str", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="max_speed", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="free_speed", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="deleted", javaType=Boolean.class, jdbcType=JdbcType.BIT),
        @Arg(column="starttime", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP),
        @Arg(column="endtime", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP),
        @Arg(column="org_id", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="createdate", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP),
        @Arg(column="updatedate", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP),
        @Arg(column="home_point_str", javaType=String.class, jdbcType=JdbcType.LONGVARCHAR),
        @Arg(column="history_point_bytes", javaType=byte[].class, jdbcType=JdbcType.LONGVARBINARY)
    })
    TaskWithBLOBs selectByPrimaryKey(Long id);

    @UpdateProvider(type=TaskSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TaskWithBLOBs record);

    @Update({
        "update TB_TASK_INFO",
        "set tk_id = #{tkId,jdbcType=VARCHAR},",
          "shepherd_id = #{shepherdId,jdbcType=VARCHAR},",
          "fence_id = #{fenceId,jdbcType=VARCHAR},",
          "ortho_id = #{orthoId,jdbcType=VARCHAR},",
          "uav_id = #{uavId,jdbcType=VARCHAR},",
          "uav_type = #{uavType,jdbcType=BIT},",
          "air_line_num = #{airLineNum,jdbcType=INTEGER},",
          "finished_count = #{finishedCount,jdbcType=INTEGER},",
          "task_type = #{taskType,jdbcType=BIT},",
          "name = #{name,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=INTEGER},",
          "predict_time = #{predictTime,jdbcType=INTEGER},",
          "predict_fly_distance = #{predictFlyDistance,jdbcType=DOUBLE},",
          "predict_battery_num = #{predictBatteryNum,jdbcType=INTEGER},",
          "predict_picture_num = #{predictPictureNum,jdbcType=INTEGER},",
          "predict_height = #{predictHeight,jdbcType=INTEGER},",
          "predict_speed = #{predictSpeed,jdbcType=DOUBLE},",
          "predict_back_height = #{predictBackHeight,jdbcType=INTEGER},",
          "finish_action = #{finishAction,jdbcType=INTEGER},",
          "battery = #{battery,jdbcType=REAL},",
          "picture_num = #{pictureNum,jdbcType=INTEGER},",
          "height = #{height,jdbcType=DOUBLE},",
          "speed = #{speed,jdbcType=DOUBLE},",
          "away_from_start = #{awayFromStart,jdbcType=DOUBLE},",
          "heading_mode = #{headingMode,jdbcType=INTEGER},",
          "course_lapover = #{courseLapover,jdbcType=REAL},",
          "side_lapover = #{sideLapover,jdbcType=REAL},",
          "principal_row_angle = #{principalRowAngle,jdbcType=REAL},",
          "edge_dis = #{edgeDis,jdbcType=REAL},",
          "geodesic_point_str = #{geodesicPointStr,jdbcType=VARCHAR},",
          "record_time = #{recordTime,jdbcType=DOUBLE},",
          "shoot_photo_type = #{shootPhotoType,jdbcType=INTEGER},",
          "way_points_str = #{wayPointsStr,jdbcType=VARCHAR},",
          "last_waypoint_str = #{lastWaypointStr,jdbcType=VARCHAR},",
          "last_way_point_index = #{lastWayPointIndex,jdbcType=INTEGER},",
          "go_home_way_point_index = #{goHomeWayPointIndex,jdbcType=INTEGER},",
          "going_back_point_str = #{goingBackPointStr,jdbcType=VARCHAR},",
          "progress = #{progress,jdbcType=INTEGER},",
          "parent_id = #{parentId,jdbcType=VARCHAR},",
          "go_backed = #{goBacked,jdbcType=BIT},",
          "has_back = #{hasBack,jdbcType=BIT},",
          "air_adjust_flag = #{airAdjustFlag,jdbcType=BIT},",
          "buffer_range_str = #{bufferRangeStr,jdbcType=VARCHAR},",
          "safe_range_str = #{safeRangeStr,jdbcType=VARCHAR},",
          "max_speed = #{maxSpeed,jdbcType=INTEGER},",
          "free_speed = #{freeSpeed,jdbcType=INTEGER},",
          "deleted = #{deleted,jdbcType=BIT},",
          "starttime = #{starttime,jdbcType=TIMESTAMP},",
          "endtime = #{endtime,jdbcType=TIMESTAMP},",
          "org_id = #{orgId,jdbcType=VARCHAR},",
          "createdate = #{createdate,jdbcType=TIMESTAMP},",
          "updatedate = #{updatedate,jdbcType=TIMESTAMP},",
          "home_point_str = #{homePointStr,jdbcType=LONGVARCHAR},",
          "history_point_bytes = #{historyPointBytes,jdbcType=LONGVARBINARY}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKeyWithBLOBs(TaskWithBLOBs record);

    @Update({
        "update TB_TASK_INFO",
        "set tk_id = #{tkId,jdbcType=VARCHAR},",
          "shepherd_id = #{shepherdId,jdbcType=VARCHAR},",
          "fence_id = #{fenceId,jdbcType=VARCHAR},",
          "ortho_id = #{orthoId,jdbcType=VARCHAR},",
          "uav_id = #{uavId,jdbcType=VARCHAR},",
          "uav_type = #{uavType,jdbcType=BIT},",
          "air_line_num = #{airLineNum,jdbcType=INTEGER},",
          "finished_count = #{finishedCount,jdbcType=INTEGER},",
          "task_type = #{taskType,jdbcType=BIT},",
          "name = #{name,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=INTEGER},",
          "predict_time = #{predictTime,jdbcType=INTEGER},",
          "predict_fly_distance = #{predictFlyDistance,jdbcType=DOUBLE},",
          "predict_battery_num = #{predictBatteryNum,jdbcType=INTEGER},",
          "predict_picture_num = #{predictPictureNum,jdbcType=INTEGER},",
          "predict_height = #{predictHeight,jdbcType=INTEGER},",
          "predict_speed = #{predictSpeed,jdbcType=DOUBLE},",
          "predict_back_height = #{predictBackHeight,jdbcType=INTEGER},",
          "finish_action = #{finishAction,jdbcType=INTEGER},",
          "battery = #{battery,jdbcType=REAL},",
          "picture_num = #{pictureNum,jdbcType=INTEGER},",
          "height = #{height,jdbcType=DOUBLE},",
          "speed = #{speed,jdbcType=DOUBLE},",
          "away_from_start = #{awayFromStart,jdbcType=DOUBLE},",
          "heading_mode = #{headingMode,jdbcType=INTEGER},",
          "course_lapover = #{courseLapover,jdbcType=REAL},",
          "side_lapover = #{sideLapover,jdbcType=REAL},",
          "principal_row_angle = #{principalRowAngle,jdbcType=REAL},",
          "edge_dis = #{edgeDis,jdbcType=REAL},",
          "geodesic_point_str = #{geodesicPointStr,jdbcType=VARCHAR},",
          "record_time = #{recordTime,jdbcType=DOUBLE},",
          "shoot_photo_type = #{shootPhotoType,jdbcType=INTEGER},",
          "way_points_str = #{wayPointsStr,jdbcType=VARCHAR},",
          "last_waypoint_str = #{lastWaypointStr,jdbcType=VARCHAR},",
          "last_way_point_index = #{lastWayPointIndex,jdbcType=INTEGER},",
          "go_home_way_point_index = #{goHomeWayPointIndex,jdbcType=INTEGER},",
          "going_back_point_str = #{goingBackPointStr,jdbcType=VARCHAR},",
          "progress = #{progress,jdbcType=INTEGER},",
          "parent_id = #{parentId,jdbcType=VARCHAR},",
          "go_backed = #{goBacked,jdbcType=BIT},",
          "has_back = #{hasBack,jdbcType=BIT},",
          "air_adjust_flag = #{airAdjustFlag,jdbcType=BIT},",
          "buffer_range_str = #{bufferRangeStr,jdbcType=VARCHAR},",
          "safe_range_str = #{safeRangeStr,jdbcType=VARCHAR},",
          "max_speed = #{maxSpeed,jdbcType=INTEGER},",
          "free_speed = #{freeSpeed,jdbcType=INTEGER},",
          "deleted = #{deleted,jdbcType=BIT},",
          "starttime = #{starttime,jdbcType=TIMESTAMP},",
          "endtime = #{endtime,jdbcType=TIMESTAMP},",
          "org_id = #{orgId,jdbcType=VARCHAR},",
          "createdate = #{createdate,jdbcType=TIMESTAMP},",
          "updatedate = #{updatedate,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Task record);
}